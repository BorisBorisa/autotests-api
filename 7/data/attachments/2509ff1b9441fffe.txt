INFO     HTTP_CLIENT:event_hooks.py:27 Make POST request to http://localhost:8000/api/v1/users
INFO     HTTP_CLIENT:event_hooks.py:36 Got response 200 OK from http://localhost:8000/api/v1/users
INFO     SWAGGER_COVERAGE_TRACKER_STORAGE:storage.py:34 Results directory does not exist, creating: /home/runner/work/autotests-api/autotests-api/coverage-results
INFO     HTTP_CLIENT:event_hooks.py:27 Make POST request to http://localhost:8000/api/v1/authentication/login
INFO     HTTP_CLIENT:event_hooks.py:36 Got response 200 OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_CLIENT:event_hooks.py:27 Make POST request to http://localhost:8000/api/v1/files
INFO     HTTP_CLIENT:event_hooks.py:36 Got response 200 OK from http://localhost:8000/api/v1/files
INFO     HTTP_CLIENT:event_hooks.py:27 Make POST request to http://localhost:8000/api/v1/courses
INFO     HTTP_CLIENT:event_hooks.py:36 Got response 200 OK from http://localhost:8000/api/v1/courses
INFO     HTTP_CLIENT:event_hooks.py:27 Make GET request to http://localhost:8000/api/v1/courses?userId=f77f7642-43e5-4f06-b9e5-2380d21ef8fe
INFO     HTTP_CLIENT:event_hooks.py:36 Got response 200 OK from http://localhost:8000/api/v1/courses?userId=f77f7642-43e5-4f06-b9e5-2380d21ef8fe
INFO     BASE_ASSERTIONS:base.py:20 Check that response status code equals to 200
INFO     COURSES_ASSERTIONS:courses.py:73 Check get courses response
INFO     BASE_ASSERTIONS:base.py:75 Check that length of "courses" equals to 1
INFO     COURSES_ASSERTIONS:courses.py:48 Check course
INFO     BASE_ASSERTIONS:base.py:39 Check that "id" equals to fe1667af-a8a5-4313-a7b1-76e9d30e518f
INFO     BASE_ASSERTIONS:base.py:39 Check that "title" equals to Couple yes investment do rate let.
INFO     BASE_ASSERTIONS:base.py:39 Check that "max_score" equals to 77
INFO     BASE_ASSERTIONS:base.py:39 Check that "min_score" equals to 18
INFO     BASE_ASSERTIONS:base.py:39 Check that "description" equals to Politics weight discover early forget. Speak side camera goal first business. Paper half particularly town technology rule attack.
INFO     BASE_ASSERTIONS:base.py:39 Check that "estimated_time" equals to 1 weeks
INFO     FILES_ASSERTIONS:files.py:52 Check file
INFO     BASE_ASSERTIONS:base.py:39 Check that "id" equals to 3f542465-18fa-483b-b015-24db4ad04012
INFO     BASE_ASSERTIONS:base.py:39 Check that "url" equals to http://localhost:8000/static/tests/33f1de8b-dd67-4c26-a0b1-1ae2a3d5dc39.png
INFO     BASE_ASSERTIONS:base.py:39 Check that "filename" equals to 33f1de8b-dd67-4c26-a0b1-1ae2a3d5dc39.png
INFO     BASE_ASSERTIONS:base.py:39 Check that "directory" equals to tests
INFO     USERS_ASSERTIONS:users.py:41 Check user
INFO     BASE_ASSERTIONS:base.py:39 Check that "id" equals to f77f7642-43e5-4f06-b9e5-2380d21ef8fe
INFO     BASE_ASSERTIONS:base.py:39 Check that "email" equals to mlynch@example.org
INFO     BASE_ASSERTIONS:base.py:39 Check that "last_name" equals to Williams
INFO     BASE_ASSERTIONS:base.py:39 Check that "first_name" equals to Haley
INFO     BASE_ASSERTIONS:base.py:39 Check that "middle_name" equals to Jacob
INFO     SCHEMA_ASSERTIONS:schema.py:21 Validating JSON schema